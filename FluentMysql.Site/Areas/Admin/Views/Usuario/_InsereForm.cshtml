@using FluentMysql.Infrastructure.Entities
@model FluentMysql.Site.Areas.Admin.ViewsData.Usuario.InsereForm
@{
    Usuario MinhaConta = (Usuario)ViewBag.MinhaConta;
}
<form class="form-horizontal" method="post" action="@Url.Action("Insere", new { })">
    <div class="alertas">
        @Html.Raw(ViewBag.Mensagem)
    </div>
    <fieldset>
        <legend class="sr-only">Formulário de inserção</legend>
        @using (Html.BSFormGroupFor(x => x.Nome, false, new { @class = "has-feedback" }))
        {
            @Html.LabelFor(x => x.Nome, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(x => x.Nome, new { @class = "form-control", @autofocus = "autofocus", @title = "Informe o título", @placeholder = "Informe o título" })
                @Html.BSValidationIconFor(x => x.Nome, false)
                @Html.ValidationMessageFor(x => x.Nome, string.Empty, new { @class = "text-danger" })
            </div>
        }
        @using (Html.BSFormGroupFor(x => x.Sobrenome, false, new { @class = "has-feedback" }))
        {
            @Html.LabelFor(x => x.Sobrenome, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(x => x.Sobrenome, new { @class = "form-control basic", @title = "Informe a url", @placeholder = "Informe o texto do artigo" })
                @Html.BSValidationIconFor(x => x.Sobrenome, false)
                @Html.ValidationMessageFor(x => x.Sobrenome, string.Empty, new { @class = "text-danger" })
            </div>
        }
        @using (Html.BSFormGroupFor(x => x.Email, false, new { @class = "has-feedback" }))
        {
            @Html.LabelFor(x => x.Email, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(x => x.Email, new { @class = "form-control", @title = "Informe a url", @placeholder = "Informe o resumo" })
                @Html.BSValidationIconFor(x => x.Email, false)
                @Html.ValidationMessageFor(x => x.Email, string.Empty, new { @class = "text-danger" })
            </div>
        }
        @using (Html.BSFormGroupFor(x => x.Nivel, false, new { @class = "has-feedback" }))
        {
            @Html.LabelFor(x => x.Nivel, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.Nivel, Model.NivelOpcoes((Usuario)ViewBag.MinhaConta), new { @class = "form-control", @title = "Informe o nível", @placeholder = "Informe o nível" })
                @Html.ValidationMessageFor(x => x.Nivel, string.Empty, new { @class = "text-danger" })
            </div>
        }
        <div class="form-group">
            <div class="col-sm-offset-3 col-md-offset-2 col-sm-9 col-md-10">
                <div class="checkbox">
                    <label>
                        @Html.CheckBoxFor(x => x.Status) @Html.DisplayNameFor(x => x.Status)
                    </label>
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.Hidden("Autores", MinhaConta.Id)
            <div class="col-sm-12">
                <button type="submit" class="btn btn-primary btn-lg  col-md-6 col-sm-6 col-xs-12" title="clique aqui para salvar">
                    <i class="fa fa-save"></i>
                    Salvar
                </button>
                <a href="@Url.Action("Index", new { @Voltar=true })" class="btn btn-link btn-lg col-md-6 col-sm-6 col-xs-12" title="clique aqui para voltar">
                    <i class="fa fa-reply"></i>
                    Voltar
                </a>
            </div>
        </div>
    </fieldset>
</form>