@using FluentMysql.Infrastructure.Entities
@model FluentMysql.Site.Areas.Admin.ViewsData.Artigo.InsereForm
@{
    Usuario MinhaConta = (Usuario)ViewBag.MinhaConta;
}            
<form class="form-horizontal" method="post" action="@Url.Action("Insere", new { })">
    <div class="alertas">
        @Html.Raw(ViewBag.Mensagem)
    </div>
    <fieldset>
        <legend class="sr-only">Formulário de inserção</legend>
        @using (Html.BSFormGroupFor(x => x.Titulo, false, new { @class = "has-feedback" }))
        {
            @Html.LabelFor(x => x.Titulo, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(x => x.Titulo, new { @class = "form-control", @autofocus = "autofocus", @title = "Informe o título", @placeholder = "Informe o título" })
                @Html.BSValidationIconFor(x => x.Titulo, false)
                @Html.ValidationMessageFor(x => x.Titulo, string.Empty, new { @class = "text-danger" })
            </div>
        }
        @using (Html.BSFormGroupFor(x => x.Texto, false, new { @class = "has-feedback" }))
        {
            @Html.LabelFor(x => x.Texto, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-10">
                @Html.TextAreaFor(x => x.Texto, new { @class = "form-control basic", @title = "Informe a url", @placeholder = "Informe o texto do artigo", @rows = "5" })
                @Html.BSValidationIconFor(x => x.Texto, false)
                @Html.ValidationMessageFor(x => x.Texto, string.Empty, new { @class = "text-danger" })
            </div>
        }
        @using (Html.BSFormGroupFor(x => x.Resumo, false, new { @class = "has-feedback" }))
        {
            @Html.LabelFor(x => x.Resumo, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-10">
                @Html.TextAreaFor(x => x.Resumo, new { @class = "form-control", @title = "Informe a url", @placeholder = "Informe o resumo", @rows = "5" })
                @Html.BSValidationIconFor(x => x.Resumo, false)
                @Html.ValidationMessageFor(x => x.Resumo, string.Empty, new { @class = "text-danger" })
            </div>
        }
        @using (Html.BSFormGroupFor(x => x.DataInicio, false, new { @class = "has-feedback" }))
        {
            @Html.LabelFor(x => x.DataInicio, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(x => x.DataInicio, new { @class = "form-control", @title = "Informe data de início", @placeholder = "Informe data de início" })
                @Html.BSValidationIconFor(x => x.DataInicio, false)
                @Html.ValidationMessageFor(x => x.DataInicio, string.Empty, new { @class = "text-danger" })
            </div>
        }
        @using (Html.BSFormGroupFor(x => x.DataTermino, false, new { @class = "has-feedback" }))
        {
            @Html.LabelFor(x => x.DataTermino, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(x => x.DataTermino, new { @class = "form-control", @title = "Informe data de término", @placeholder = "Informe data de término" })
                @Html.BSValidationIconFor(x => x.DataTermino, false)
                @Html.ValidationMessageFor(x => x.DataTermino, string.Empty, new { @class = "text-danger" })
            </div>
        }
        @using (Html.BSFormGroupFor(x => x.Hashtag, false, new { @class = "has-feedback" }))
        {
            @Html.LabelFor(x => x.Hashtag, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(x => x.Hashtag, new { @class = "form-control col-sm-10", @title = "Informe as hashtag", @placeholder = "Informe as hashtag" })
                @Html.ValidationMessageFor(x => x.Hashtag, string.Empty, new { @class = "text-danger" })
            </div>
        }
        <div class="form-group">
            <div class="col-sm-offset-3 col-md-offset-2 col-sm-9 col-md-10">
                <div class="checkbox">
                    <label>
                        @Html.CheckBoxFor(x => x.Status) @Html.DisplayNameFor(x => x.Status)
                    </label>
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.Hidden("Autores", MinhaConta.Id)
            <div class="col-sm-12">
                <button type="submit" class="btn btn-primary btn-lg  col-md-6 col-sm-6 col-xs-12" title="clique aqui para salvar">
                    <i class="fa fa-save"></i>
                    Salvar
                </button>
                <a href="@Url.Action("Index", new { @Voltar=true })" class="btn btn-link btn-lg col-md-6 col-sm-6 col-xs-12" title="clique aqui para voltar">
                    <i class="fa fa-reply"></i>
                    Voltar
                </a>
            </div>
        </div>
    </fieldset>
</form>